[tool.poetry]
name = "berkeley-cs285-hw2"
version = "1.0.0"
description = "hw2 assignments for UC Berkeley CS 238"
authors = ["Your Name <your.email@example.com>"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"  # can't use 3.11 because of pygame 2.1.0

# Core dependencies
mujoco = "3.2.6"
gym = {version = "0.25.2", extras = ["classic_control", "box2d"]}
tensorboard = ">=2.10.0,<3.0.0"
tensorboardX = ">=2.5.1,<3.0.0"
matplotlib = ">=3.5.3,<4.0.0"
ipython = ">=7.34.0,<9.0.0"
moviepy = "1.0.3"
pyvirtualdisplay = "3.0"
opencv-python = ">=4.6.0.66,<5.0.0"
ipdb = "0.13.13"
swig = ">=4.0.2,<5.0.0"
box2d-py = ">=2.3.5,<=2.3.8"

# for PyTorch version of the HW assignments
[tool.poetry.group.torch]
optional=true
[tool.poetry.group.torch.dependencies]
torch = "1.12.1"

# for JAX version of the HW assignments
[tool.poetry.group.jax]
optional=false
[tool.poetry.group.jax.dependencies]
jax = ">=0.4.35"  # Make sure to check for the latest compatible version
flax = ">=0.10.1"   # Flax is commonly used with JAX
optax = ">=0.2.3"  # For optimization with JAX

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = ">=8.3.4,<9.0.0"

[tool.poetry.group.dev]
optional = true
dependencies = { ruff = "^0.8.6" }


[tool.ruff]
line-length = 119


[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "UP",  # pyupgrade
    "F",   # pyflakes
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "Q",   # flake8-quotes
    "S",   # flake8-bandit
    "C4",  # flake8-comprehensions
    "I",   # isort
    "RUF", # Ruff-specific rules
    "FA", # flake8-future-annotations
    "ISC", # https://beta.ruff.rs/docs/rules/#flake8-implicit-str-concat-isc
    "PIE", # https://beta.ruff.rs/docs/rules/#flake8-pie-pie
    "PT", # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
    "RSE", # https://beta.ruff.rs/docs/rules/#flake8-raise-rse
    "RET", # https://beta.ruff.rs/docs/rules/#flake8-return-ret
    "SIM", # https://beta.ruff.rs/docs/rules/#flake8-simplify-sim
    "N",  # pep8-naming
    "BLE",  # flake8-blind-except    
]

ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "S101",  # use of assert
    "S311",  # use of random
    "S608",  # use of SQL formatting (possible injection)
    "S301",  # use of pickle
    'N812',  #  Lowercase ... imported as non-lowercase ...
    'N817',  #  imported as acronym
    'N806',  #  Variable in function should be lowercase
    'N802',  #  Function name should be lowercase
    'N803',  #  Argument name should be lowercase
    "N805",  # used in Pydantic validator methods
    'N815',  #  in class scope should not be mixedCase
    'N814',  #  Camelcase imported as constant `BL`    
    # TODO: enable following rules
    "RUF012", # TODO: enable: Mutable class attributes
    "PT011", # pytest.raises is too broad
    "RET504",
    "ISC001",  # Implicit string concatenation
    "I001",  # isort
    "PT001", # pytest-style
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
